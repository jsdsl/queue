{"version":3,"sources":["../ts/queue.ts"],"names":[],"mappings":";;AAaA,MAAa,KAAK;IAIjB,YAAmB,GAAG,QAAa;QAF3B,kBAAa,GAAQ,EAAE,CAAC;QAI/B,IAAI,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC;IAE3B,CAAC;IAEM,OAAO,CAAC,GAAG,QAAa;QAE9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;IAEtC,CAAC;IAEM,OAAO;QAEb,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAEnC,CAAC;IAEM,IAAI;QAEV,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAE9B,CAAC;IAEM,OAAO,CAAC,aAAqB,CAAC;QAEpC,KAAK,IAAI,KAAK,GAAW,CAAC,EAAE,KAAK,GAAG,UAAU,EAAE,KAAK,EAAE,EAAE;YAExD,IAAI,QAAQ,GAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;YACnC,IAAI,CAAC,KAAK,EAAE,CAAC;YAEb,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gBAE7B,IAAI,MAAM,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACjE,IAAI,OAAO,GAAM,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aAEtB;SAED;IAEF,CAAC;IAEM,IAAI;QAEV,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;IAElC,CAAC;IAEM,OAAO;QAEb,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAE5B,CAAC;IAEM,QAAQ,CAAC,OAAU;QAEzB,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAE7C,CAAC;IAEM,KAAK;QAEX,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAEzB,CAAC;IAEM,OAAO;QAEb,OAAO,IAAI,CAAC,aAAa,CAAC;IAE3B,CAAC;CAED;AA7ED,sBA6EC","file":"queue.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t1:10 PM -- February 18th, 2019.\n *\tProject: @jsdsl/queue\n */\n\n/**\n * A queue/FIFO data structure.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class Queue<E = any> {\n\t\n\tprivate internalArray: E[] = [];\n\t\n\tpublic constructor(...elements: E[]) {\n\t\t\n\t\tthis.enqueue(...elements);\n\t\t\n\t}\n\t\n\tpublic enqueue(...elements: E[]): void {\n\t\t\n\t\tthis.internalArray.push(...elements);\n\t\t\n\t}\n\t\n\tpublic dequeue(): E | undefined {\n\t\t\n\t\treturn this.internalArray.shift();\n\t\t\n\t}\n\t\n\tpublic peek(): E | undefined {\n\t\t\n\t\treturn this.internalArray[0];\n\t\t\n\t}\n\t\n\tpublic shuffle(iterations: number = 1): void {\n\t\t\n\t\tfor (let count: number = 0; count < iterations; count++) {\n\t\t\t\n\t\t\tlet elements: E[] = this.toArray();\n\t\t\tthis.clear();\n\t\t\t\n\t\t\twhile (elements.length !== 0) {\n\t\t\t\t\n\t\t\t\tlet random: number = Math.floor(Math.random() * elements.length);\n\t\t\t\tlet element: E = elements.splice(random, 1)[0];\n\t\t\t\tthis.enqueue(element);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tpublic size(): number {\n\t\t\n\t\treturn this.internalArray.length;\n\t\t\n\t}\n\t\n\tpublic isEmpty(): boolean {\n\t\t\n\t\treturn (this.size() === 0);\n\t\t\n\t}\n\t\n\tpublic contains(element: E): boolean {\n\t\t\n\t\treturn this.internalArray.includes(element);\n\t\t\n\t}\n\t\n\tpublic clear(): void {\n\t\t\n\t\tthis.internalArray = [];\n\t\t\n\t}\n\t\n\tpublic toArray(): E[] {\n\t\t\n\t\treturn this.internalArray;\n\t\t\n\t}\n\t\n}"]}